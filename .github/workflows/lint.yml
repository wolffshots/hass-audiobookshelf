name: Lint

on:
  push:
    paths:
      - '**.py'
  pull_request:
    paths:
      - '**.py'

env:
  POETRY_VERSION: 1.5.1

jobs:
  mypy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Audiobookshelf
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-${{ env.POETRY_VERSION }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'
      - name: Run MyPy
        run: |
          source .venv/bin/activate \
          mypy ./custom_components/audiobookshelf
  ruff:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Audiobookshelf
        uses: actions/checkout@v4
      - name: Run Ruff
        uses: chartboost/ruff-action@v1
        with:
          version: 0.0.272
          src: './custom_components/audiobookshelf'